@model NewNationals.Areas.AdminControlPanel.Models.UserModels
@using System.Web.UI.WebControls
@using ClassLibrary.Services
@using ClassLibrary.Commons
@{
    ViewBag.Title = "Thêm mới tài khoản";
    Layout = "~/Areas/AdminControlPanel/Views/Shared/_LayoutAdminCp.cshtml";
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
       Cập nhật tài khoản
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i>Tài khoản</a></li>
        <li class="active">Cập nhật</li>
    </ol>
</section>
<!-- Main content -->
<section class="content">
    <!-- Main row -->
    <div class="row">
        <div class="col-xs-12">
            <div class="box">
                <div class="box-header">
                    <h3 class="box-title">
                        <a href="@Url.Action("Index","User")" class="btn btn-block btn-info btn-flat">Danh Sách</a>
                    </h3>
                </div>
                <!-- /.box-header -->
                <div class="box-body">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model=>model.Id)
                        <div class="row">
                            <div class="col-xs-12">
                                <div class="form-group">
                                    <label>@Html.LabelFor(model => model.UserName)</label>
                                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nhập tài khoản",@readonly="true" } })
                                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <label>@Html.LabelFor(model => model.UserPassword)</label>
                                    @Html.EditorFor(model => model.UserPassword, new {htmlAttributes = new {@class = "form-control", @placeholder = "Nhập mật khẩu", @type = "password"}})
                                    @Html.ValidationMessageFor(model => model.UserPassword, "", new {@class = "text-danger"})
                                </div>
                                @*<div class="form-group">
                                    <label>@Html.LabelFor(model => model.RoleId)</label>
                                    @Html.DropDownListFor(model => model.RoleId, null, "--- Chọn Quyền ---", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
                                </div>*@
                                <div class="form-group">
                                    <label>@Html.LabelFor(model => model.UserEmail)</label>
                                    @Html.EditorFor(model => model.UserEmail, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nhập Email" } })
                                    @Html.ValidationMessageFor(model => model.UserEmail, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <label>@Html.LabelFor(model => model.FullName)</label>
                                    @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nhập họ tên" } })
                                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <label>@Html.LabelFor(model => model.Avatar)</label>
                                    <div class="input-group">
                                        @Html.EditorFor(model => model.Avatar, new { htmlAttributes = new { @class = "form-control", @placeholder = "Chọn ảnh đại diện" } })
                                        @Html.ValidationMessageFor(model => model.Avatar, "", new { @class = "text-danger" })
                                        <span class="input-group-btn">
                                            <button type="button" id="SelectImage" class="btn btn-info btn-flat">Chọn ảnh đại diện</button>
                                        </span>
                                    </div>
                                </div>
                              
                                <div class="form-group">
                                    <label>@Html.LabelFor(model => model.Status)</label>
                                    @Html.DropDownListFor(x => x.Status, new SelectList(CommonsHelper.StatusAccount(), "Value", "Text"), new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <button class="btn bg-maroon">Lưu Thông Tin</button>
                                    <a class="btn bg-orange" onclick=" BackIndex() ">Hủy Bỏ</a>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>
<script src="~/Areas/AdminControlPanel/Content/ckeditor/styles.js"></script>
<script src="~/Areas/AdminControlPanel/Content/ckfinder/ckfinder.js"></script>
<script>
    $(function () {
        $("#SelectImage").click(function () {
            var finder = new CKFinder();
            finder.selectActionFunction = function (fileUrl) {
                $("#Avatar").val(fileUrl);
            };
            finder.popup();
        });
    });
    function BackIndex() {
        var url = "/AdminControlPanel/User/Index";
        window.location.assign(url);
    }
</script>

